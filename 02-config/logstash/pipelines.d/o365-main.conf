# /etc/logstash/pipelines.d/o365-main.conf
# Pipeline principal pour le traitement des données O365 avec enrichissement géographique
# Ce pipeline traite les événements O365 et applique les politiques d'enrichissement

input {
  # Configuration pour recevoir les données depuis Elastic Agent
  beats {
    port => 5044
    ssl => true
    ssl_certificate => "/etc/logstash/certs/logstash.crt"
    ssl_key => "/etc/logstash/certs/logstash.key"
    ssl_certificate_authorities => ["/etc/logstash/certs/ca.crt"]
  }
}

filter {
  # Filtrage spécifique aux événements O365
  if [data_stream][dataset] =~ /o365/ {
    
    # Extraction et normalisation des champs géographiques
    if [o365][audit][ClientIP] {
      geoip {
        source => "[o365][audit][ClientIP]"
        target => "[client][geo]"
        database => "/etc/logstash/geoip/GeoLite2-City.mmdb"
      }
    }
    
    # Préparation des champs pour l'enrichissement
    if [o365][audit][UserId] and [o365][audit][OrganizationId] {
      mutate {
        add_field => {
          "tenant_user_lookup" => "%{[o365][audit][OrganizationId]}|%{[o365][audit][UserId]}"
          "tenant_lookup" => "%{[o365][audit][OrganizationId]}"
        }
      }
    }
    
    # Ajout de métadonnées pour le suivi
    mutate {
      add_field => {
        "[@metadata][enrichment_pipeline]" => "o365-enrich-pipeline"
        "[@metadata][processed_at]" => "%{+yyyy-MM-dd'T'HH:mm:ss.SSSZ}"
      }
    }
  }
}

output {
  if [data_stream][dataset] =~ /o365/ {
    elasticsearch {
      hosts => ["https://elastic.example.com:9200"]
      # Utilisation du pipeline d'enrichissement
      pipeline => "o365-enrich-pipeline"
      # Index selon le data stream ECS
      index => "%{[data_stream][type]}-%{[data_stream][dataset]}-%{[data_stream][namespace]}"
      user => "${ES_USER}"
      password => "${ES_PASS}"
      ssl => true
      cacert => "/etc/logstash/certs/ca.crt"
    }
  } else {
    # Fallback pour autres types de données
    elasticsearch {
      hosts => ["https://elastic.example.com:9200"]
      index => "logstash-%{+yyyy.MM.dd}"
      user => "${ES_USER}"
      password => "${ES_PASS}"
      ssl => true
      cacert => "/etc/logstash/certs/ca.crt"
    }
  }
  
  # Sortie de débogage (optionnelle)
  if [log][level] == "debug" {
    stdout { codec => rubydebug }
  }
}
