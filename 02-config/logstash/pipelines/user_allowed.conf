# Configuration Logstash - Import CSV Utilisateurs Autorisés par Pays
# Fichier: /etc/logstash/pipelines.d/user_allowed.conf
# 
# Ce pipeline traite les fichiers CSV contenant les pays autorisés par utilisateur
# Format CSV: tenant_user,allowed
# Exemple: contoso|alice@contoso.com,US|GB|FR

input {
  file {
    id => "user_csv"
    path => "/var/data/csv/user_allowed.csv"
    start_position => "beginning"
    sincedb_path => "/var/lib/logstash/sincedb/user_allowed.sincedb"
    codec => plain { charset => "UTF-8" }
  }
}

filter {
  # Analyse CSV avec séparateur virgule
  csv {
    separator => ","
    columns => ["tenant_user","allowed"]
    skip_header => "true"
  }
  
  # tenant_user = "contoso|alice@contoso.com"
  # Transformation du champ allowed en tableau (split par |)
  mutate {
    split => { "allowed" => "|" }
  }
  
  # Extraction tenant.id et user.name pour stockage séparé si nécessaire
  mutate {
    split => { "tenant_user" => "|" }
    add_field => {
      "tenant.id" => "%{[tenant_user][0]}"
      "user.name" => "%{[tenant_user][1]}"
    }
  }
  
  # Réassemblage du champ tenant_user en format string
  mutate {
    join => { "tenant_user" => ["%{[tenant_user][0]}", "%{[tenant_user][1]}"] }
  }
  
  # Ajout de métadonnées pour le monitoring
  mutate {
    add_field => {
      "[@metadata][pipeline]" => "user_allowed_import"
      "[@metadata][timestamp]" => "%{@timestamp}"
    }
  }
}

output {
  # Index Elasticsearch pour les données utilisateur
  elasticsearch {
    hosts => ["https://elastic.example.com:9200"]
    index => "user_allowed_countries"
    # Utilisation du tenant_user comme clé unique pour éviter les doublons
    document_id => "%{tenant_user}"
    user => "${ES_USER}"
    password => "${ES_PASS}"
    ssl => true
    cacert => "/etc/logstash/certs/ca.crt"
    # Configuration SSL avancée
    ssl_certificate_verification => true
    ssl_cipher_suites => ["TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"]
  }
  
  # Debug output (à désactiver en production)
  stdout { 
    codec => rubydebug 
    id => "debug_user_allowed"
  }
}
